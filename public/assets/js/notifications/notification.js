// Generated by CoffeeScript 2.1.1
(function() {
  this.Notification = class Notification {
    constructor() {
      this.checkPermissions();
    }

    checkPermissions() {
      if (!Notify.needsPermission) {
        return this.notify(new Message('Test.'));
      } else if (Notify.isSupported()) {
        return this.notify(new Message('sldkf', 'lskdfj'));
      }
    }

    //https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API
    //Notify.requestPermission @onPermissionGranted, @onPermissionDenied
    onPermissionGranted() {
      var body, s, title;
      //title = Helper.param 'title'
      //body = Helper.param 'body'
      s = '#notification.index';
      title = $(`${s} .title`).val();
      body = $(`${s} .body`).val();
      return this.notify(new Message(title, body));
    }

    onPermissionDenied() {
      //@notify new Message('Notification permission denied.')
      return console.log('Notification permission denied.');
    }

    notify(message) {
      var params;
      params = {
        body: message.body,
        notifyShow: this.onNotify,
        notifyError: this.onNotifyError,
        timeout: 5
      };
      console.log('xxx ', message.title, params);
      return new Notify(message.title, params).show();
    }

    onNotify() {
      return console.log('Notified.');
    }

    onNotifyError(e) {
      return console.log('Notification error.', e);
    }

  };

  $(document).ready(function() {
    return new Notification();
  });

}).call(this);
